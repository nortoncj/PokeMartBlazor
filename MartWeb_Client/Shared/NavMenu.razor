@inject ISyncLocalStorageService _localStorage
@inject ICartService _cartService
@implements IDisposable


<nav class="navbar navbar-dark navbar-expand-lg bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">PokeMart</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>


    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item p-0">
          <NavLink class="nav-link "  href="/"><span class="p-2">Home</span></NavLink>
          </li>
          <li>
          <NavLink class="nav-link "  href="/cart"><span class="p-2"><span class="oi oi-cart"><span class="badge text-bg-secondary text-dark bg-light position-absolute top-0 start-100 translate-middle badge">
              @GetCartCount()
          </span></span></span></NavLink>
        </li>
      </ul>
      <form class="d-flex" role="search">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item p-0"><NavLink class="nav-link " aria-current="register" href="/register"><span class="p-2">Register</span></NavLink></li>
              <li class="nav-item p-0"><NavLink class="nav-link " aria-current="login" href="/login"><span class="p-2">Login</span></NavLink></li>
          </ul>
      </form>
    </div>
  </div>
</nav>


@code{
    protected override void OnInitialized()
    {
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }

    private int GetCartCount()
    {
        var cart = _localStorage.GetItem<List<ShoppingCart>>(SD.ShoppingCart);
        return cart == null ? 0 : cart.Count;
    }
}